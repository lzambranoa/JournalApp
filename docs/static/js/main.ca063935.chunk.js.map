{"version":3,"sources":["firebase/firebaseConfig.js","types/types.js","actions/ui.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PublicRoutes.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebaseConfig","apiKey","process","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messagingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPID","firebase","initializeApp","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","finishLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassWord","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","console","log","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","isValidate","validator","isEmail","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","onClick","disabled","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","active","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalScreen","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ca063935.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// console.log( process.env );\r\n\r\n// Estos datos son traidos desde la consola de Firebase\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_APIKEY,\r\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECTID,\r\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n    appId: process.env.REACT_APP_APPID\r\n  };\r\n\r\n  // const firebaseConfigTesting = {\r\n  //   apiKey: \"AIzaSyA7mLV91bgf62A5Df3XSZ__Vtaa9pb9_rs\",\r\n  //   authDomain: \"redux-demo-fe25e.firebaseapp.com\",\r\n  //   projectId: \"redux-demo-fe25e\",\r\n  //   storageBucket: \"redux-demo-fe25e.appspot.com\",\r\n  //   messagingSenderId: \"1057039354147\",\r\n  //   appId: \"1:1057039354147:web:532c4b6ba9c6f691f7a496\"\r\n  // };\r\n\r\n  // if( process.env.NODE_ENV === 'test' ) {\r\n  //     //testing\r\n  //   firebase.initializeApp(firebaseConfigTesting);\r\n  // } else {\r\n  //     //dev/prod\r\n  //     // Se llama a la inicializacion de Firebase\r\n      firebase.initializeApp(firebaseConfig);\r\n  // }\r\n\r\n  // esta variable hace referencia a la base de datos\r\n  // la vamos a usar para grabar la información\r\n  const db = firebase.firestore();\r\n\r\n  /*Esta variable hace referencia a el auth Provider\r\n  para que nos permita hacer la autenticacion con Google*/\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {\r\n      db,\r\n      googleAuthProvider,\r\n      firebase\r\n  }\r\n\r\n\r\n","export const types = {\r\n    login: '[Auth] login',\r\n    logout: '[Auth] logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] REmove Error',\r\n\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdate: '[Notes] Update note',\r\n    notesFileUrl: '[Notes] Update Image Url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n    \r\n\r\n}","import { types } from \"../types/types\"\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading,\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading,\r\n});","\r\n\r\nexport const fileUpload = async ( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dfmursg0o/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if( resp.ok ) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch(error) {\r\n        throw error;\r\n    }\r\n}","import { db } from \"../firebase/firebaseConfig\";\r\n\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n    \r\n const notesSnap =  await db.collection(`${uid}/journal/notes`).get();\r\n const notes = [];\r\n \r\n notesSnap.forEach( snapHijo => {\r\n     notes.push({\r\n         id: snapHijo.id,\r\n         ...snapHijo.data()\r\n     })\r\n });\r\n\r\n//  console.log(notes);\r\n\r\n return notes;\r\n}","import Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebaseConfig\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n/*getState es una funcion que nos permite acceder a todos nuestro state y de alli podemos\r\nextraer el uid del usuario que crea la nota */\r\nexport const startNewNote = () =>{\r\n    return async ( dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        // hacemos referenia a nuestra base de datos\r\n        const doc = await db.collection(`${ uid }/journal/notes`).add( newNote );\r\n\r\n        dispatch( activeNote( doc.id, newNote ))\r\n        dispatch( addNewNote( doc.id, newNote))\r\n    }\r\n}\r\n\r\n/*Activamos la nota para cargar a la base de datos la información completa*/\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async ( dispatch ) => {\r\n\r\n        const notes = await loadNotes(uid);\r\n        dispatch( setNotes(notes))\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async( dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if( !note.url ){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\r\n\r\n        dispatch( refreshNote( note.id, noteToFirestore ));\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\n// action que me permite la actualizacion del menu lateral de la app\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdate,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async ( dispatch, getState ) => {\r\n        const {active:activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ));\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\n// action que modifica mi store al momento de borrar una nota\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n});","import { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { firebase, googleAuthProvider } from '../firebase/firebaseConfig';\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nimport { noteLogout } from \"./notes\";\r\n\r\n\r\n/*Esta action nos va permitir logearnos con un susraio y contraseña\r\nya creados o registrados */\r\nexport const startLoginEmailPassWord = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n\r\n        return firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n            dispatch(login(user.uid, user.displayName));\r\n\r\n            dispatch( finishLoading() );\r\n        })\r\n        .catch( e => {\r\n            console.log(e);\r\n            dispatch( finishLoading() );\r\n            Swal.fire('Error', e.message, 'error');\r\n        })\r\n    }\r\n}\r\n\r\n/*Esta action nos va permitir registrar el email, password y el name en el firebase*/\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n\r\n                await user.updateProfile({ displayName: name }); // actualiza la informacion del name\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n/*Esta action nos va permitir la autenticación de Google\r\nes una funcion con un callback que nos retorna una promesa usando el Provider\r\ndefinido en el archivo firebaseConfig.js*/\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n};\r\n\r\n/*Creacion de una acción asincrona que permita iniciar\r\nel boton del Logout*/\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n      await firebase.auth().signOut();  // cierra la sesion en firebase\r\n\r\n      dispatch(logout())\r\n      dispatch( noteLogout());\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n});","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}\r\n\r\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom'\nimport validator from 'validator';\nimport { startGoogleLogin, startLoginEmailPassWord } from '../../actions/auth';\nimport { setError } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const { loading } = useSelector( state => state.ui );\n\n    const [ formValues, handleInputChange ] = useForm({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = formValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        if(isValidate()){\n            dispatch(startLoginEmailPassWord(email, password));\n        }\n    }\n\n    // este metodo se llama al momento de llamar el boton\n    // de login con google\n    const handleGoogleLogin = () => {\n        dispatch( startGoogleLogin() );\n    }\n\n    const handleEmailLogin = () => {\n        dispatch(startLoginEmailPassWord(email, password));\n    }\n\n    const isValidate = () => {\n        if(!validator.isEmail(email)){\n            dispatch(setError('Email is not valid'))\n            return false;\n        } \n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form \n            className=\"animate_animated animate_fadeIn animate_faster\"    \n            onSubmit={handleLogin} \n            >\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    onClick={handleEmailLogin}\n                    disabled={ loading }\n                >\n                    Login\n                </button>\n\n                \n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n\n                    <div \n                        className=\"google-btn\"\n                        onClick={handleGoogleLogin}\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link \n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account    \n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; \nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\nimport { removeError, setError } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const {msgError} = useSelector( state => state.ui );\n\n    const [ formValues, handleInputChange ] = useForm({\n        name: 'leonardo',\n        email: 'leonardo@hotmail.com',\n        password: '123456',\n        password2: '123456'\n    });\n\n    const {name, email, password, password2} = formValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        \n        if( isFormValid() ){\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\n        }\n    }\n\n    const isFormValid = () => {\n\n        if(name.trim().length === 0) {\n            dispatch(setError('Nombre es requerido'))\n            return false\n        } else if( !validator.isEmail( email ) ){\n            dispatch(setError('Email is not valid'))\n            return false;\n        } else if(password !== password2 || password.length < 5){\n            dispatch(setError('Password should be at least 6 characters and match each other'));\n            return false;\n        }\n        dispatch(removeError());\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form \n             className=\"animate_animated animate_fadeIn animate_faster\"\n            onSubmit={handleRegister} >\n\n             {  \n                msgError &&\n              (<div className=\"auth__alert-error\" >\n                    { msgError }\n                </div>)\n                }\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={password2}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n               \n\n                <Link \n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n\n    const noteDate = moment(date);\n    const dispatch = useDispatch();\n\n    const handleEntryClick = () => {\n        dispatch(activeNote(id, {\n            date, title, body, url\n        }))\n    }\n    return (\n        <div className=\"journal__entry pointer animate_animated animate_fadeIn animate_faster\"\n            onClick={handleEntryClick}\n            >\n            \n            {\n                url &&\n                <div \n                className=\"journal__entry-picture\"\n                style={{\n                    backgroundSize: 'cover',\n                    backgroundImage: `url(${url})`\n                }}\n            ></div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    { title }\n                </p>\n                <p className=\"journal__entry-content\">\n                   { body }\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{ noteDate.format('dddd')}</span>\n                <h4>{ noteDate.format('Do')}</h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n   const { notes } = useSelector( state => state.notes );\n\n    return (\n        <div className=\"journal__entries\">\n            \n            {\n                notes.map( note => (\n                    <JournalEntry \n                        key={ note.id } \n                        { ...note }\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { JournalEntries } from './JournalEntries'\nimport {useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n    const {name} = useSelector( state => state.auth );\n\n    const handleLogout = () => {\n        dispatch( startLogout() )\n    }\n\n    const handleAddNew = () => {\n        dispatch( startNewNote() )\n    }\n     return (\n        <aside className=\"journal__sidebar\">\n            \n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span>{name}</span>\n                </h3>\n\n                <button \n                onClick={handleLogout}\n                className=\"btn\"\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div \n            onClick={handleAddNew}\n            className=\"journal__new-entry\"\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />    \n\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector  } from 'react-redux';\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const {active} = useSelector( state => state.notes );\n    const handleSave = () => {\n        dispatch(startSaveNote( active ))\n    }\n    const handlePictureClick = () => {\n        document.querySelector('#fileSelector').click();\n    }\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if( file ) {\n            dispatch(startUploading( file ));\n        }\n    }\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de agosto 2020</span>\n\n            <input\n                id='fileSelector'\n                type='file'\n                name='file'\n                style={{ display: 'none' }}\n                onChange={ handleFileChange }\n            />\n            <div>\n                <button \n                    className=\"btn\"\n                    onClick={ handlePictureClick }\n                    >\n                    Picture\n                </button>\n\n                <button\n                onClick={ handleSave }\n                className=\"btn\">\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useSelector, useDispatch  } from 'react-redux';\nimport { activeNote, startDeleting } from '../../actions/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n    const { active:note} = useSelector( state => state.notes );\n    const [ formValues, handleInputChange, reset ] = useForm( note );\n    const { body, title, id } = formValues;\n\n    const activeId = useRef( note.id );\n    useEffect(() => {\n        if( note.id !== activeId.current ){\n            reset( note );\n            activeId.current = note.id\n        }\n    }, [note, reset])\n\n    useEffect(() => {\n        dispatch(activeNote(formValues.id, {...formValues}))\n    }, [formValues, dispatch])\n\n    const handleDelete = () => {\n        dispatch( startDeleting( id ));\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    value={title}\n                    name='title'\n                    onChange={handleInputChange}\n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    value={body}\n                    name='body'\n                    onChange={handleInputChange}\n                ></textarea>\n\n                {\n                    (note.url)\n                    &&\n                    <div className=\"notes__image\">\n                    <img \n                        src={note.url}\n                        alt=\"imagen\"\n                    />\n                </div>\n                }\n\n\n            </div>\n\n            <button \n                className=\"btn btn-danger\"\n                onClick={handleDelete}\n                >\n                Delete\n            </button>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                pr create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { NothingSelected } from './NothingSelected';\nimport { useSelector } from 'react-redux';\n\n\nexport const JournalScreen = () => {\n\n    const {active} = useSelector( state => state.notes );\n    return (\n        <div className=\"journal__main-content animate_animated animate_fadeIn animate_faster\">\n            \n            <Sidebar />\n\n            \n            <main>\n                {\n                    (active)\n                        ?(<NoteScreen />)\n                        :(<NothingSelected />)\n                }\n\n            </main>\n\n\n        </div>\n    )\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    \r\n    return (\r\n        <Route {...rest}\r\n            component={(props) =>(\r\n               ( !isAuthenticated )\r\n                ? <Component {...props} /> \r\n                : <Redirect to=\"/\" />\r\n            )}        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    \r\n    return (\r\n        <Route {...rest}\r\n            component={(props) =>(\r\n               ( isAuthenticated )\r\n                ? <Component {...props} /> \r\n                : <Redirect to='/auth/login' />\r\n            )}        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { firebase } from '../firebase/firebaseConfig';\n\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { login } from '../actions/auth';\nimport { PublicRoute } from './PublicRoutes';\nimport { PrivateRoute } from './PrivateRoute';\nimport {  startLoadingNotes } from '../actions/notes';\n\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [checking, setChecking] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n\n        \n\n        /*Es un objeto especial que se llama repetidamente cuando tiene\n        cambios en la aplicación*/\n        firebase.auth().onAuthStateChanged( async(user) => {\n\n            if( user?.uid ) {\n                dispatch(login(user.uid, user.displayName));\n                setIsLoggedIn(true);\n\n             dispatch( startLoadingNotes(user.uid) )\n            } else {\n                setIsLoggedIn(false);\n            }\n\n            setChecking(false);\n        })\n    }, [dispatch, setChecking, setIsLoggedIn])\n\n    if( checking ) {\n        return(\n            <h1>Wait...</h1>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute \n                        path=\"/auth\"\n                        component={ AuthRouter }\n                        isAuthenticated={isLoggedIn}\n                    />\n\n                    <PrivateRoute \n                        exact\n                        path=\"/\"\n                        component={ JournalScreen }\n                        isAuthenticated={isLoggedIn}\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch( action.type){\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        \r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","/*\r\n    {\r\n        notes: [],\r\n        active: null,\r\n        active: {\r\n            id: 'KAKJJAKJSAKLALSKWOW2W2EK',\r\n            title: '',\r\n            body: '',\r\n            imageUrl: '',\r\n            date: 566565123124545\r\n        }\r\n    }\r\n*/\r\n\r\nimport { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type){\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state, \r\n                notes: [ action.payload, ...state.notes]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload]\r\n            }\r\n\r\n        case types.notesUpdate:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n    \r\n})\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n    );","import { types } from \"../types/types\"\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case types.login:\r\n            return{\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={store} >\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}